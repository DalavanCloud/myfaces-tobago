<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Copyright 2002-2005 atanion GmbH.
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
-->

<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">

<!--# $Id: spellchecker.properties.xml,v 1.1 2005/09/09 14:50:08 lofwyr Exp $-->

<properties>
  <entry key="pageTitle">Adressbuch Mini Howto</entry>
  <entry key="intro">Übersicht</entry>
  <entry key="classDefinition">Klassen Beschreibung</entry>
  <entry key="navigationRules">Navigations Regeln</entry>
  <entry key="jspDefinition">JSP Seiten</entry>
  <entry key="theme">Themes</entry>
  <entry key="validation">Validation</entry>
  <entry key="i18n">Internationalisierung</entry>
  <entry key="codeExample">Sheet Code Beispiel:</entry>


  <!-- Intro -->
  <entry key="introText1">&lt;b&gt;Übersicht&lt;/b&gt;&lt;br /&gt;
    In diesem Mini Howto soll gezeigt werden wie einfach und schnell eine kleine
    Webapplikation mit Tobago realisiert werden kann. Ziel dieses Howtos ist es,
    eine Applikation zu entwickeln, welche verschiedene Design über einen Theme
    Mechanismus zur Verfügung stellt, Benutzereingaben validiert und eine
    internationalisierte GUI bietet. In den nächsten Schritten geben wir einen
    Überblick über folgende Funktionen:
    &lt;ul&gt;
    &lt;li&gt;Programmieren der JSP Seiten&lt;/li&gt;
    &lt;li&gt;Festlegen der Navigations Reihenfolge&lt;/li&gt;
    &lt;li&gt;Implementieren der nötigen Klassen&lt;/li&gt;
    &lt;li&gt;Einbinden eines zweiten Themes&lt;/li&gt;
    &lt;li&gt;Validierung der Eingaben&lt;/li&gt;
    &lt;li&gt;Internationalisieren der Anwendung&lt;/li&gt;
    &lt;/ul&gt;
    Das Adressbuch wird eine sehr einfache Applikation, die es ermöglicht
    Adressen mit einigen zusützlichen Daten, wie. z.B. eMail, Telefon,
    Geburtstag usw. zu speichern.
  </entry>

  <!-- JSP Pages -->
  <entry key="jspDefinitionText1">&lt;b&gt;JSP Seiten&lt;/b&gt; &lt;br /&gt; Für
    die Applikation werden 2 einfache JSP Seiten mit Tobago Tags genutzt. Eine
    Seite mit einem Tobago Sheet zum Anzeigen einer Liste der gespeicherten
    Adressen und eine weitere zum Anzeigen der Adressen selbst.</entry>
  <entry key="jspDefinitionText2">Dies ist ein Code Ausschnitt für die
    Darstellung der Werte im Sheet. Die Werte stehen dem Sheet in einem List
    Objekt zur Verfügung und werden dann über die hier vergebene Variable
    Attribut "address" ausgelesen.</entry>


  <!-- Navigation Rules -->
  <entry key="navigationRulesText1">&lt;b&gt;Navigationsregeln&lt;/b&gt;&lt;br /&gt;
    Um nach Aktionen auf die jeweils richtige Seite zu gelangen, wird in der der
    Datei "faces-config.xml" der Programmfluß festgelegt.&lt;br /&gt; </entry>

  <entry key="navigationRulesBoxTitle1">Code Beispiel</entry>
  <entry key="navigationRulesText2">Aus der Applikation bekommt man als return
    Wert (outcome) jeweils einen String der die nächste Seite enthält (in diesem
    Beispiel "editor" oder "list"). Je nach Wert dieses Outcomes leitet Faces
    den Benutzer auf die zugehörige Seite.</entry>


  <!-- Class Description -->
  <entry key="classDefinitionText1">&lt;b&gt;Die "Controller" Klasse&lt;/b&gt;&lt;br
    /&gt; Für die Applikation wird neben ein paar Hilfsklassen vor allem die
    "Controller" Klasse verwendet. In dieser Klasse werden Methoden zum Auslesen
    und Speichern von Adressdaten angelegt. Zudem kontrolliert sie das Outcome,
    mit dem entschieden wird auf welche Seite als nächstes geleitet
    wird.</entry>
  <entry key="classDefinitionBoxTitle">Code Beispiel</entry>


  <!-- Themes -->
  <entry key="themesText1">&lt;b&gt;Themes konfigurieren&lt;/b&gt; &lt;br /&gt;
    Um der Anwendung ein bestimmtes Aussehen zu geben wird in der Datei
    "tobago-config.xml" ein Theme angegeben, dass für die Applikation verwendet
    werden soll. &lt;br /&gt;Die Klasse im Tag default-theme definert dieses
    Standard-Theme. An dieser Stelle können weitere Themes definiert werden, die
    der User gegebenenfalls selbst auswählen kann.</entry>
  <entry key="themesCodeExampleBoxTitle1">Code Beispiel</entry>

  <!--<entry key=" themesText2"> </entry>-->


  <!-- Validation -->
  <entry key="validationText1">&lt;b&gt;Validierung der Eingaben&lt;/b&gt; &lt;br
    /&gt; Tobago unterstützt den Benutzer bei der Eingabe von Werten indem es
    Möglichkeiten zur Validierung dieser bereitstellt. Um beispielsweise das
    Eingabefeld "First Name" auf Inhalt zu validieren ist folgender Code
    notwendig:</entry>
  <entry key="validationCodeExampleBoxTitle1">Code Beispiel</entry>

  <entry key="validationText2">Mit Hilfe des required Attributs wird das Feld
    auf beliebigen Inhalt geprüft. Um die evtl. auftretende Fehlermeldung später
    anzuzeigen, muss ein &lt;t:messages&gt; auf der JSP platziert werden. An
    dieser Stelle werden die Fehlermeldungen ausgegeben.</entry>


  <!-- Internationalisation -->
  <entry key="i18nText1">&lt;b&gt;Internationalisierung&lt;/b&gt; &lt;br /&gt;
    Als letzter Schritt soll die Applikation noch in anderen Sprachen verfügbar
    gemacht werden. Dazu stellt man der Applikation die übersetzten Texte in
    sogenannten Resource Bundles zur Verfügung. Diese Bundles sind Property
    Dateien in denen sog. "Key/Value" Paare stehen, die für eine Variable
    jeweils die der Sprache zugehörige Übersetzung liefern. In der Applikation
    wird dann nur noch die entsprechende Variable genutzt die durch den
    übersetzten Text ersetzt wird. Die deutsche Übersetzung wird in der
    deutschen Property Datei festgelegt miniHowto_de.properties.xml. &lt;br /&gt;
    Um das Bundle verfügbar zu machen, muss es auf der JSP Seite geladen
    werden:</entry>
  <entry key="i18nCodeExampleBoxTitle1">Code Beispiel</entry>

  <entry key="i18nText2">Innerhalb der Tags können nun die bisherigen Texte
    durch die in den Property Dateien definierten Keys ersetzt werden:</entry>
  <entry key="i18nCodeExampleBoxTitle2">Code Beispiel</entry>


</properties>