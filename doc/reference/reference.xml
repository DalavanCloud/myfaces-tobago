<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN"
    "http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd"
    [ <!ENTITY taglib SYSTEM "file:build/docbook/tag-reference.xml"> ]>
<book lang="en">
  <bookinfo>
    <title>Tobago Reference Manual</title>
    <copyright>
      <year>2005</year>
      <holder>Atanion GmbH</holder>
    </copyright>
  </bookinfo>

  <chapter id="introduction">
    <title>Introduction</title>
    <para>
      This is the
      <application>Tobago</application>
      reference documentation.
    </para>
    <para>
      The goal of Tobago is to create and maintain a well-designed set of user
      interface components based on the JavaServer Faces (
      <abbrev>JSF</abbrev>
      ) specification.
    </para>
    <para>
      Tobago is more than just a tag library. The following statements
      characterize Tobago and makes it different from other frameworks:
      <itemizedlist>
        <listitem>
          The focus of Tobago is to create business applications without the
          need for <abbrev>HTML</abbrev>
          design. The development of Tobago pages follows more the development
          of conventional user interfaces than the creation of web pages.
        </listitem>
        <listitem>
          The UI components are abstracted from
          <abbrev>HTML</abbrev>
          and any layout information that does not belong to the general page structure.
          The final output format is determined by the client/user-agent.
        </listitem>
        <listitem>
          A theming mechanism makes it easy to change the look and feel and to
          provide special implementations for certain browsers. A fallback
          solution ensures that as much code is reused for new themes as
          possible.
        </listitem>
        <listitem>
          A layout manager is used to arrange the components automatically. This
          means, no manual layouting with
          <abbrev>HTML</abbrev>
          tables or other constructs is needed.
        </listitem>
      </itemizedlist>
      The
      <link linkend='architecture'>next</link>
      chapter will give a short description of the architecture.
    </para>
  </chapter>

  <chapter id="architecture">
    <title>Architecture</title>
    <para></para>
  </chapter>

  <chapter id="setup">
    <title>Setup</title>
    <para></para>
  </chapter>

  <chapter id="example-address">
    <title>Example: Addressbook</title>
    <para>A text about the addressbook example...</para>
  </chapter>

  <chapter id="features">
    <title>Features</title>
    <sect1 id="features.themes">
      <title>Themes</title>
      <sect2 id="features.themes.config">
        <title>ThemeConfig</title>
        <para>
          <example>
            <title>Test Listing</title>
            <programlisting lang="java">public sttaic void main()
              {...}</programlisting>
          </example>
        </para>
      </sect2>
      <!--    <sect2>[CSS]</sect2>-->
      <!--    <sect2>[Developing Themes]</sect2>-->
    </sect1>
    <sect1 id="features.multiform">
      <title>Multiform</title>
      <para></para>
    </sect1>
    <sect1 id="features.action-listener">
      <title>ActionListenerImpl</title>
      <para></para>
    </sect1>
    <sect1 id="features.controls">
      <title>Controls</title>
      <sect2 id="features.controls.standard">
        <title>Standard Controls</title>
        <para>content</para>
      </sect2>
      <sect2 id="features.controls.sheet">
        <title>Sheet</title>
        <para></para>
      </sect2>
      <sect2 id="features.controls.tree">
        <title>Tree</title>
        <para></para>
      </sect2>
    </sect1>
    <sect1 id="features.converter">
      <title>Converter</title>
      <para></para>
    </sect1>
    <sect1 id="features.var-resolver">
      <title>VariableResolverImpl</title>
      <para></para>
    </sect1>
    <sect1 id="features.servlet.non-faces-request">
      <title>NonFacesRequestServlet</title>
      <para></para>
    </sect1>
    <sect1 id="features.servlet.template">
      <title>TemplateServlet</title>
      <para></para>
    </sect1>
    <sect1>
      <title>ClearValidatorsActionListener ?</title>
      <para></para>
    </sect1>
  </chapter>

  <!-- the reference of the tag lib is generated -->
  &taglib;

  <chapter id="api">
    <title>API-Doc + Source-Doc</title>
    <sect1 id="api.components">
      <title>Components</title>
      <para></para>
    </sect1>
    <sect1 id="api.state">
      <title>State</title>
      <para></para>
      <sect2 id="api.state.page">
        <title>PageState</title>
      </sect2>
      <sect2 id="api.state.sheet">
        <title>SheetState</title>
      </sect2>
      <sect2 id="api.state.tree">
        <title>TreeState</title>
      </sect2>
    </sect1>
  </chapter>

  <!--  <chapter>[Custom Controls]</chapter>-->

  <chapter id="tips">
    <title>Tips and Tricks</title>
    <sect1 id="tips.mbeans">
      <title>How to access to managed beans from java code</title>
      <para></para>
    </sect1>
  </chapter>

  <appendix id="requirements">
    <title>Requirements</title>
    <sect1 id="requirements.java">
      <title>Java, JSP, Servlet</title>
      <para></para>
    </sect1>
  </appendix>

  <index></index>
  <!--
  AddressDemo (Code)
  Standard-Setup (Code)
  -->

</book>