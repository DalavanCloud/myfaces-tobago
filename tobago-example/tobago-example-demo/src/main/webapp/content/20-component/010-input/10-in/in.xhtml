<?xml version="1.0" encoding="UTF-8"?>

<!--
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
-->

<ui:composition template="/main.xhtml"
                xmlns="http://www.w3.org/1999/xhtml"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:tc="http://myfaces.apache.org/tobago/component"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:f="http://java.sun.com/jsf/core">
  <ui:param name="title" value="#{demoBundle.in} &lt;tc:in&gt;"/>
  <p>The <code class="language-markup">&lt;tc:in/&gt;</code> tag create a classic inputfield.</p>
  <tc:link label="Tag Library Documentation" image="#{request.contextPath}/image/feather-leaf.png"
           link="#{demoBundle.tagDocUrl}/in.html"/>

  <tc:section label="Ajax">
    <p>The outputfield in this example, displays the given value on the server.
      With <code class="language-markup">&lt;f:ajax render="outputAjax" listener="\#{inController.update}"/></code>,
      the outputfield will be rerendered, after the value has been changed.
      This is because <code>outputAjax</code> is the id of the <code>&lt;tc:out/></code> tag.
      and the default event for <code class="language-markup">&lt;tc:in/></code> is <code>change</code>.

      Additional, the <code>listener</code> attribute is set. The given method is called after the inputfield
      loose focus.</p>

    <tc:in id="inputAjax" label="On Change" value="#{inController.changeValue}">
      <!--<f:ajax render="outputAjax" listener="#{inController.update}"/>-->
    </tc:in>

    <h:commandLink value="example" ><f:ajax render="outputAjax"/></h:commandLink>

    <tc:out id="outputAjax" label="On Server" value="#{inController.changeValue}"/>

  </tc:section>
</ui:composition>
