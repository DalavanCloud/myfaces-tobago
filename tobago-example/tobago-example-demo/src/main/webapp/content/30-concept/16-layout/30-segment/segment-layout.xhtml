<?xml version="1.0" encoding="UTF-8"?>

<!--
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
-->

<ui:composition template="/main.xhtml"
                xmlns="http://www.w3.org/1999/xhtml"
                xmlns:tc="http://myfaces.apache.org/tobago/component"
                xmlns:ui="http://java.sun.com/jsf/facelets">
  <ui:param name="title" value="#{demoBundle.segment_layout}  &lt;tc:segmentLayout>"/>
  <p>The segment layout is basicly a grid with 12 columns.
    The number and the proportion of the columns can be set with
    <code>large</code>, <code>medium</code>, <code>small</code> or <code>extraSmall</code>.
    Every attribute has a different css class, but the usage is the same.
    The value is a semicolon separated list of integers, which sum has to be '12'.
    A value of n will use n columns from the grid.</p>
  <tc:link label="Tag Library Documentation" image="#{request.contextPath}/image/feather-leaf.png"
           link="#{demoBundle.tagDocUrl}/#{info.stableVersion}/tld/tc/segmentLayout.html"/>

  <tc:section label="Basics">
    <p>This example show a segment layout with four columns and a segment layout with three columns.
      The numbers are displayed via the <code class="language-markup">&lt;tc:label/></code> tag.
      The space is set via the <code class="language-markup">&lt;tc:hidden/></code> tag.</p>
    <tc:section label="4 Columns">
      <pre><code class="language-markup">&lt;tc:segmentLayout medium="1;6;2;3"></code></pre>
      <tc:segmentLayout medium="1;6;2;3">
        <tc:in value="1"/>
        <tc:in value="2"/>
        <tc:in value="3"/>
        <tc:in value="4"/>
        <tc:hidden/>
        <tc:in value="5"/>
      </tc:segmentLayout>
    </tc:section>
    <tc:section label="3 Columns">
      <pre><code class="language-markup">&lt;tc:segmentLayout medium="2;4;6"></code></pre>
      <tc:segmentLayout medium="2;4;6">
        <tc:in value="1"/>
        <tc:in value="2"/>
        <tc:in value="3"/>
        <tc:in value="4"/>
        <tc:hidden/>
        <tc:in value="5"/>
      </tc:segmentLayout>
    </tc:section>
  </tc:section>

  <tc:section label="Screen Size">
    <p>For the different kinds of screen sizes, the segment layout has four attributes:
      <code>large</code>, <code>medium</code>, <code>small</code> and <code>extraSmall</code>.
      The first two ones should be used for desktops. The last two should be used for tablets and phones.
      Notice, that only the screen size matters. So a small browser window on a big screen also reacts with
      <code>small</code> and <code>extraSmall</code>.</p>
    <p>In the following example, all attributes are used. If you are on a desktop you can see the different
      behavior by changing the size of the browser window.</p>
    <pre><code class="language-markup">&lt;tc:segmentLayout large="2;2;2;2;2;2"
  medium="3;3;3;3" small="4;4;4" extraSmall="6;6">
    ...</code></pre>

    <tc:segmentLayout large="2;2;2;2;2;2" medium="3;3;3;3" small="4;4;4" extraSmall="6;6">
      <tc:in value="1"/>
      <tc:in value="2"/>
      <tc:in value="3"/>
      <tc:in value="4"/>
      <tc:in value="5"/>
      <tc:in value="6"/>
      <tc:in value="7"/>
      <tc:in value="8"/>
      <tc:in value="9"/>
      <tc:in value="10"/>
      <tc:in value="11"/>
      <tc:in value="12"/>
    </tc:segmentLayout>
  </tc:section>

  <tc:section label="Offset">
    <p>An offset can be set for the different proportions with the
      <code class="language-markup">&lt;tc:segmentLayoutConstraint/></code> tag which can have the attributes
      <code>offsetExtraSmall</code>, <code>offsetSmall</code>,<code>offsetMedium</code> and
      <code>offsetLarge</code>.</p>
    <p>Possible values are from 1 to 11 for <code>offsetExtraSmall</code>.<br/>
      For the other attributes possible values are from 0 to 11.<br/>
      A <code>offsetMedium="0"</code> overwrite the offset from smaller proportions.</p>
    <p>In the following example an offset is set for all proportions.</p>
    <pre><code class="language-markup">&lt;tc:segmentLayout extraSmall="4;4;4" small="3;3;3;3" medium="2;2;2;2;2;2" large="1;1;1;1;1;1;1;1;1;1;1;1">
  &lt;tc:in value="1"/>
  &lt;tc:in value="2">
    &lt;tc:segmentLayoutConstraint offsetExtraSmall="4" offsetSmall="6" offsetMedium="8" offsetLarge="10"/>
  &lt;/tc:in>
  &lt;tc:in value="3"/>
  ...
&lt;/tc:segmentLayout></code></pre>
    <tc:segmentLayout extraSmall="4;4;4" small="3;3;3;3" medium="2;2;2;2;2;2" large="1;1;1;1;1;1;1;1;1;1;1;1">
      <tc:in value="1"/>
      <tc:in value="2">
        <tc:segmentLayoutConstraint offsetExtraSmall="4" offsetSmall="6" offsetMedium="8" offsetLarge="10"/>
      </tc:in>
      <tc:in value="3"/>
      <tc:in value="4"/>
      <tc:in value="5"/>
      <tc:in value="6"/>
      <tc:in value="7"/>
      <tc:in value="8"/>
      <tc:in value="9"/>
      <tc:in value="10"/>
      <tc:in value="11"/>
      <tc:in value="12"/>
    </tc:segmentLayout>
  </tc:section>

  <tc:section label="Overwrite default layout">
    <p>The default layout can be overwritten by the
      <code class="language-markup">&lt;tc:segmentLayoutConstraint/></code> tag.
      Possible values are <code>extraSmall</code>, <code>small</code>,<code>medium</code> and <code>large</code>.</p>
    <p>In the following example the medium default layout of the third input field is overwritter with '3'.</p>
    <pre><code class="language-markup">&lt;tc:segmentLayout medium="4;8">
  &lt;tc:in/>
  &lt;tc:in/>
  &lt;tc:in>
    &lt;tc:segmentLayoutConstraint medium="3"/>
  &lt;/tc:in>
  &lt;tc:in/>
&lt;/tc:segmentLayout></code></pre>
    <tc:segmentLayout medium="4;8">
      <tc:in/>
      <tc:in/>
      <tc:in>
        <tc:segmentLayoutConstraint overwriteMedium="3"/>
      </tc:in>
      <tc:in/>
    </tc:segmentLayout>
  </tc:section>
</ui:composition>
