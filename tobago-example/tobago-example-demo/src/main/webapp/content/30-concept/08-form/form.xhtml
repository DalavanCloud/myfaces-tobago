<?xml version="1.0" encoding="UTF-8"?>

<!--
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
-->

<ui:composition template="/main.xhtml"
                xmlns="http://www.w3.org/1999/xhtml"
                xmlns:tc="http://myfaces.apache.org/tobago/component"
                xmlns:ui="http://java.sun.com/jsf/facelets">
  <ui:param name="title" value="#{overviewBundle.form} &lt;tc:form>"/>
  <p>Tobago supports nested forms and can treat each form separately.
    Values can be stored separately into the model, while already filled input elements keep their values (temporarily).
    If the validation of a form is activated but the actual value of this form is only stored temporarily,
    the validation is deactivated until the value is definitely stored into the model.
    Forms are add by the <code class="language-markup">&lt;tc:form/></code> tag.</p>
  <p>Forms are also relevant for
    <tc:link label="#{overviewBundle.default_command}"
             resource="/faces/content/20-component/040-command/00-default/default-command.xhtml"/>.</p>
  <tc:link label="Tag Library Documentation" image="image/feather-leaf.png"
           link="#{overviewBundle.tagDocUrl}/form.html"/>

  <tc:section label="Example">
    <p>Every form in this example is surrounded by a content box.
      The submit buttons in the inner forms only put the inner value into the model.
      The submit button in the outer form put all values into the model.
      Notice, that the inputfield in the outer form is required.</p>

    <pre><code class="language-markup">&lt;tc:form>
  &lt;tc:form>
    &lt;tc:in label="Inner Value 1" value="\#{formController.innerValue1}"/>
    ...
  &lt;/tc:form>
  &lt;tc:form>
    &lt;tc:in label="Inner Value 2" value="\#{formController.innerValue2}"/>
    ...
  &lt;/tc:form>
  &lt;tc:in label="Outer Value" required="true" value="\#{formController.outerValue}"/>
  ...
&lt;/tc:form></code></pre>

    <tc:box label="Outer Form">
      <tc:form>
        <tc:box label="Inner Form 1">
          <tc:form>
            <tc:in label="Inner Value 1" value="#{formController.innerValue1}"/>
            <tc:out label="Value in Model" value="#{formController.innerValue1}"/>
            <tc:button label="Submit"/>
          </tc:form>
        </tc:box>
        <tc:box label="Inner Form 2">
          <tc:form>
            <tc:in label="Inner Value 2" value="#{formController.innerValue2}"/>
            <tc:out label="Value in Model" value="#{formController.innerValue2}"/>
            <tc:button label="Submit"/>
          </tc:form>
        </tc:box>
        <tc:separator/>
        <tc:in label="Outer Value" required="true" value="#{formController.outerValue}"/>
        <tc:out label="Value in Model" value="#{formController.outerValue}"/>
        <tc:button label="Submit"/>
      </tc:form>
    </tc:box>
  </tc:section>
</ui:composition>
