 ------
 Theme Handling
 ------

Theme Handling

 You have two possibilities:

   [[1]] For easy development:

      [[a]] Put the theme JAR into the classpath

      [[b]] Define a ResourceServlet in the <<<web.xml>>>
         and bind it to the URL pattern of the theme path

      []
      You can see an example in {{{http://svn.apache.org/repos/asf/myfaces/tobago/trunk/example/blank/}tobago-example-blank}}

   [[1]] For production:

      [[a]] Put the theme JAR into the classpath

      [[b]] Unpack the resources (no classes and no properties)
         of the theme into the WAR. You can use the maven-theme-plugin to achieve this.

      []
      You can see an example in {{{http://svn.apache.org/repos/asf/myfaces/tobago/trunk/example/demo/}tobago-example-demo}}

 []
 Note:
   The <<<tobago-theme-\<name\>-\<version\>-THEME.jar>>> is no longer needed.
   You only need the <<<tobago-theme-\<name\>-\<version\>.jar>>>.
   So you may have to remove some tags in the POM if you are using Maven 2:

+------------------------------------------+
   <classifier>THEME</classifier>
   <scope>provided</scope>
+------------------------------------------+

   Additionally the <<<\<resource-dir\>>>> in the <<<tobago-config.xml>>> has changed from

+------------------------------------------+
   <resource-dir>tobago</resource-dir>
+------------------------------------------+

   to:

+------------------------------------------+
   <resource-dir>org/apache/myfaces/tobago/renderkit</resource-dir>
+------------------------------------------+

 The tag is no longer needed, because it will automatically detected
 from the theme descriptor tobago-theme.xml.
